Execute (KeyTable: Parse No Modifiers):
  let modstrs  = ''
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 0, bitflags

Execute (KeyTable: Parse Single Modifier):
  let modstrs  = 'shift'
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 2, bitflags

Execute (KeyTable: Parse Single Modifier, Trailing Comma):
  let modstrs  = 'shift,'
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 2, bitflags

Execute (KeyTable: Parse Multiple Distinct Modifiers):
  let modstrs  = 'shift,control,alt,meta,command'
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 158, bitflags

Execute (KeyTable: Parse Multiple Modifiers w/ Duplicates):
  let modstrs  = 'shift,mouse double click,mouse double click,shift'
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 34, bitflags

Execute (KeyTable: Parse Modifiers, Test for Case Sensitivity):
  let modstrs  = 'shiFt,control, alt'
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 14, bitflags

Execute (KeyTable: Parse Modifiers, Exotic Whitespace):
  let modstrs  = "shiFt,\tcontrol,alt"
  let bitflags = markbar#KeyTable#ParseModifiers(modstrs)
Then:
  AssertEqual 14, bitflags
